@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<EntityLayer.Concrete.Category>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h1>Kategori Listesi</h1>
<br />
<table class="table table-borderless">
    <thead>
        <tr>
            <th>#</th>
            <th>Kategori Adı</th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th>@item.CategoryId</th>
                <td>@item.CategoryName</td>
                <td>
                    <a href="/Admin/Category/CategoryDelete/@item.CategoryId" id="DeleteBtn"
                       onclick="return confirm('Silmek istediğinizden emin misiniz ?');"
                       class="btn btn-danger">Pasif Yap</a>
                </td>
                <td><a href="#" class="btn btn-primary">Aktif Yap</a></td>
                <td><a href="#" class="btn btn-warning">Düzenle</a></td>
            </tr>
        }
    </tbody>
</table>
<a href="/Admin/Category/AddCategory" class="btn btn-primary">Yeni Kategori</a>
<br />
<br />
@*(IPagedList)Model,page=>Url.Action("Index",new { page })-> IPagedList türünde modeli alacaksın page(controllerda tanımlanan parametre) öyleki her devasında page parametresiyle beraber yeni sayfaya gideceksin. *@
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))