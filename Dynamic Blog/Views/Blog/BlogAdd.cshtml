@model EntityLayer.Concrete.Blog
@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

<h1>Yeni Blog Ekle</h1>
<br />

@using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))
{
    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Görseli")
    @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Küçük Görseli")
    @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogThumbnailImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Kategorisi")
    @*@Html.TextBoxFor(x => x.CategoryId, new { @class = "form-control" })*@
    @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.blogCategory, new { @class = "form-control" })
    <br />
    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x => x.BlogContent, 15, 4, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
    <br />
    <button class="btn btn-info">Kaydet</button>
}